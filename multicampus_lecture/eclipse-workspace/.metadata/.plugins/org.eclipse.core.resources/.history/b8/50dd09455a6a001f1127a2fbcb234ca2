<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
	
	<context:component-scan base-package="com.multicampus.biz"/>
	
	<!-- 실제 사용할 DAO 객체만 등록한다. -->
	<bean class="com.multicampus.biz.board.BoardDAOSpring"/>
	
	<aop:aspectj-autoproxy/>
	
	<context:property-placeholder location="classpath:board.properties"/>
	
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${board.datasource.driverClass}"/>
		<property name="url"             value="${board.datasource.jdbcUrl}"/>
		<property name="username"        value="${board.datasource.username}"/>
		<property name="password"        value="${board.datasource.password}"/>
	</bean>
	
	<bean class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<!-- 횡단관심에 해당하는 Advice 클래스 등록 
	<bean id="log"            class="com.multicampus.biz.common.LogAdvice"/>
	<bean id="afterReturning" class="com.multicampus.biz.common.AfterReturningAdvice"/>
	<bean id="afterThrowing"  class="com.multicampus.biz.common.AfterThrowingAdvice"/>
	<bean id="around"         class="com.multicampus.biz.common.AroundAdvice"/>
	-->
	
	<!-- AOP 설정 
	<aop:config>
		<aop:pointcut id="allPointcut" expression="execution(* com.multicampus.biz..*Impl.*(..))"/>
		<aop:pointcut id="getPointcut" expression="execution(* com.multicampus.biz..*Impl.get*(..))"/>
	
		<aop:aspect ref="log">
			<aop:before pointcut-ref="allPointcut" method="printLog"/>
		</aop:aspect>
		
		<aop:aspect ref="afterReturning">
			<aop:after-returning pointcut-ref="getPointcut" method="afterLog" returning="returnObj"/>
		</aop:aspect>
		
		<aop:aspect ref="afterThrowing">
			<aop:after-throwing pointcut-ref="allPointcut" method="exceptionLog" throwing="exceptionObj"/>
		</aop:aspect>
		
		<aop:aspect ref="around">
			<aop:around pointcut-ref="allPointcut" method="aroundLog"/>
		</aop:aspect>
	</aop:config>
	-->
	
	<!-- 
	<bean id="boardDAO" class="com.multicampus.biz.board.BoardDAO"></bean>
	
	<bean id="boardService" class="com.multicampus.biz.board.BoardServiceImpl">
		<property name="boardDAO" ref="boardDAO"/>
	</bean>
	-->
</beans>









